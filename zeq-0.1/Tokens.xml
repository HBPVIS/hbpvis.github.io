<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
  <Token>
    <TokenIdentifier>
      <Name>zeq::Event</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>zeq::Event</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_event.html</Path>
    <Abstract>An event is emitted by a Publisher to notify Subscriber of a change. </Abstract>
    <DeclaredIn>event.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Event</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Event</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_event.html</Path>
    <Anchor>adf0ac13f9a9607da302e3160f5aa704f</Anchor>
    <Abstract>Construct a new event of the given type. </Abstract>
    <DeclaredIn>event.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Event</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Event</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_event.html</Path>
    <Anchor>ad6d601dabce3d3846586bb217d35574a</Anchor>
    <Abstract>Move ctor. </Abstract>
    <DeclaredIn>event.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Event</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_event.html</Path>
    <Anchor>a3151cb5645690bb65ae65139b8351a53</Anchor>
    <DeclaredIn>event.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeq::Publisher</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>zeq::Publisher</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_publisher.html</Path>
    <Abstract>Serves and publishes events, consumed by Subscriber. </Abstract>
    <DeclaredIn>publisher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Publisher</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Publisher</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_publisher.html</Path>
    <Anchor>a6e460c2fe2c2edc5578bd1e1585b53b3</Anchor>
    <Abstract>Create a publisher on the given URI. </Abstract>
    <DeclaredIn>publisher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>publish</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Publisher</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_publisher.html</Path>
    <Anchor>aa2b06125dd60b753e990ca4c21c0bf81</Anchor>
    <Abstract>Publish the given event to any subscriber. </Abstract>
    <DeclaredIn>publisher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeq::Subscriber</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>zeq::Subscriber</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_subscriber.html</Path>
    <Abstract>Subscribes to Publisher to receive events. </Abstract>
    <DeclaredIn>subscriber.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Subscriber</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Subscriber</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_subscriber.html</Path>
    <Anchor>a003c122c89beef2c906e9b7a2e7e57d0</Anchor>
    <Abstract>Create and subscribe to one or more publishers. </Abstract>
    <DeclaredIn>subscriber.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Subscriber</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Subscriber</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_subscriber.html</Path>
    <Anchor>a8aca116a1edd501f03387435ef8bb272</Anchor>
    <Abstract>Destroy this subscriber and withdraw any subscriptions. </Abstract>
    <DeclaredIn>subscriber.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>receive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Subscriber</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_subscriber.html</Path>
    <Anchor>ad4f53782664776b7686eb3be6773e7b2</Anchor>
    <Abstract>Receive one event from all connected publishers. </Abstract>
    <DeclaredIn>subscriber.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Subscriber</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_subscriber.html</Path>
    <Anchor>a9c4341c460667e9776addc26d516e6af</Anchor>
    <Abstract>Register a new callback for an event. </Abstract>
    <DeclaredIn>subscriber.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deregisterHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Subscriber</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_subscriber.html</Path>
    <Anchor>a334c8c17c3ce3a90ec256513852b63c8</Anchor>
    <Abstract>Deregister a callback for an event. </Abstract>
    <DeclaredIn>subscriber.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeq::Version</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>zeq::Version</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_version.html</Path>
    <Abstract>Information about the current zeq version. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMajor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>zeq::Version</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_version.html</Path>
    <Anchor>a41f4df1ff1e733d30bc86afa5eb474d7</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>zeq::Version</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_version.html</Path>
    <Anchor>af81f9d68c1637e17fc54ccac16c74aa8</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPatch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>zeq::Version</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_version.html</Path>
    <Anchor>a825866dab633b61baaf8896498d7df3a</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>zeq::Version</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_version.html</Path>
    <Anchor>ad198112d1dc5d9103683e8c113b785f9</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevision</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>zeq::Version</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_version.html</Path>
    <Anchor>a9dd91755076bd032f13abcba22e72b19</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getABI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>zeq::Version</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_version.html</Path>
    <Anchor>aad68168a59b3bbe74a8c1f4eab20feec</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>zeq::Version</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_version.html</Path>
    <Anchor>abe85a29b7b4665337615c3b9378617f8</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>zeq::Version</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_version.html</Path>
    <Anchor>ae7d6d0df1a602c190250cb704f2f43d5</Anchor>
    <Abstract>Runtime check for ABI compatibility. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeq::vocabulary</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>zeq::vocabulary</Scope>
    </TokenIdentifier>
    <Path>namespacezeq_1_1vocabulary.html</Path>
    <Abstract>An application specific vocabulary of supported events including their serialization. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serializeCamera</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>zeq::vocabulary</Scope>
    </TokenIdentifier>
    <Path>namespacezeq_1_1vocabulary.html</Path>
    <Anchor>a439f2277bcc7b4e23b5dab6d04dff339</Anchor>
    <Abstract>Serialize the given camera matrix into an Event of type camera. </Abstract>
    <DeclaredIn>vocabulary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserializeCamera</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>zeq::vocabulary</Scope>
    </TokenIdentifier>
    <Path>namespacezeq_1_1vocabulary.html</Path>
    <Anchor>a58a837746012364bb89d75f8a13f1b4f</Anchor>
    <Abstract>Deserialize the given camera event into the 4x4 matrix. </Abstract>
    <DeclaredIn>vocabulary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serializeSelection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>zeq::vocabulary</Scope>
    </TokenIdentifier>
    <Path>namespacezeq_1_1vocabulary.html</Path>
    <Anchor>a359582db5aa8fbb26a8ba512adad1292</Anchor>
    <Abstract>Serialize the given selection into an Event of type selection. </Abstract>
    <DeclaredIn>vocabulary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserializeSelection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>zeq::vocabulary</Scope>
    </TokenIdentifier>
    <Path>namespacezeq_1_1vocabulary.html</Path>
    <Anchor>a0aa263199d2d830ef0917aadc3c72231</Anchor>
    <Abstract>Deserialize the given selection event into the vector of ids. </Abstract>
    <DeclaredIn>vocabulary.h</DeclaredIn>
  </Token>
</Tokens>

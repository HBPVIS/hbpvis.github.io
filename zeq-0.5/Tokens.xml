<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
  <Token>
    <TokenIdentifier>
      <Name>ZEQHBP_VERSION_MAJOR</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>hbp_2version_8h.html</Path>
    <Anchor>a6c854e0b2cd0d07a46a61c2a799d7686</Anchor>
    <Abstract>The current major version. </Abstract>
    <DeclaredIn>hbp/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ZEQHBP_VERSION_MINOR</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>hbp_2version_8h.html</Path>
    <Anchor>a7179b0fa828533863f24047f2eda6abc</Anchor>
    <Abstract>The current minor version. </Abstract>
    <DeclaredIn>hbp/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ZEQHBP_VERSION_PATCH</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>hbp_2version_8h.html</Path>
    <Anchor>acc1ef9eb59ed22798693f38425f7c938</Anchor>
    <Abstract>The current patch level. </Abstract>
    <DeclaredIn>hbp/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ZEQHBP_VERSION_REVISION</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>hbp_2version_8h.html</Path>
    <Anchor>a9b0e5cd6200279713770b55b6c2bddb4</Anchor>
    <Abstract>The current SCM revision. </Abstract>
    <DeclaredIn>hbp/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ZEQHBP_VERSION_ABI</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>hbp_2version_8h.html</Path>
    <Anchor>a89f1853601704996292f2fdccdb0117a</Anchor>
    <Abstract>The current binary interface. </Abstract>
    <DeclaredIn>hbp/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ZEQHBP_VERSION_GT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>hbp_2version_8h.html</Path>
    <Anchor>a887a8c684253c8d954673d523d7ae22a</Anchor>
    <Abstract>True if the current version is newer than the given one. </Abstract>
    <DeclaredIn>hbp/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ZEQHBP_VERSION_GE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>hbp_2version_8h.html</Path>
    <Anchor>a0cdef561f1f81b39441476c8c73b9eae</Anchor>
    <Abstract>True if the current version is equal or newer to the given. </Abstract>
    <DeclaredIn>hbp/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ZEQHBP_VERSION_LT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>hbp_2version_8h.html</Path>
    <Anchor>a1964ebb53f3abee59b1ccb2dd2b0318d</Anchor>
    <Abstract>True if the current version is older than the given one. </Abstract>
    <DeclaredIn>hbp/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ZEQHBP_VERSION_LE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>hbp_2version_8h.html</Path>
    <Anchor>aef3c84280c48286051f8f99844d09a55</Anchor>
    <Abstract>True if the current version is older or equal to the given. </Abstract>
    <DeclaredIn>hbp/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ZEQ_VERSION_MAJOR</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a12fae0402740d5c84366ab5f0bd6554c</Anchor>
    <Abstract>The current major version. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ZEQ_VERSION_MINOR</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>acd3491df19714dd0d1861f50a10b32f2</Anchor>
    <Abstract>The current minor version. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ZEQ_VERSION_PATCH</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a5269836f205f1455c34566228b45b09f</Anchor>
    <Abstract>The current patch level. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ZEQ_VERSION_REVISION</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a6ff2bef8774b18f7720a7379e47f7d00</Anchor>
    <Abstract>The current SCM revision. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ZEQ_VERSION_ABI</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a6a6b0fcb9b32d23eca113e585726bf5e</Anchor>
    <Abstract>The current binary interface. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ZEQ_VERSION_GT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>aa96a4b6a93bd636ed8960420b4bd0363</Anchor>
    <Abstract>True if the current version is newer than the given one. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ZEQ_VERSION_GE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>ac144433933c03622cf40d6400bccaa97</Anchor>
    <Abstract>True if the current version is equal or newer to the given. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ZEQ_VERSION_LT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a7419588525c44968c085bb9f7b01bedd</Anchor>
    <Abstract>True if the current version is older than the given one. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ZEQ_VERSION_LE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a9c71293a06474f1635d9e432b9bce572</Anchor>
    <Abstract>True if the current version is older or equal to the given. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Changelog</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>_changelog.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>httpserver</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>httpserver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Sessions</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>_sessions.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>md__gpfs_bbp.cscs.ch_home_bilgili_ZeroEQ_doc_Fivox-</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>md__gpfs_bbp_8cscs_8ch_home_bilgili__zero_e_q_doc__fivox-.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>todo</Name>
      <APILanguage>unknown</APILanguage>
    </TokenIdentifier>
    <Path>todo.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deprecated</Name>
      <APILanguage>unknown</APILanguage>
    </TokenIdentifier>
    <Path>deprecated.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Events</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>group___events.html</Path>
    <Abstract>Supported events by the vocabulary. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeq</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>zeq</Scope>
    </TokenIdentifier>
    <Path>namespacezeq.html</Path>
    <Abstract>Publish-subscribe classes for typed events. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TIMEOUT_INDEFINITE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>zeq</Scope>
    </TokenIdentifier>
    <Path>namespacezeq.html</Path>
    <Anchor>aa10ad7f847c8bb7d5cee563dd940dc4e</Anchor>
    <Abstract>Constant defining &amp;#39;wait forever&amp;#39; in methods with wait parameters. </Abstract>
    <DeclaredIn>types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ANNOUNCE_NONE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>zeq</Scope>
    </TokenIdentifier>
    <Path>namespacezeq.html</Path>
    <Anchor>a9d40cc95f062939118c95e4538b45bafa4268ffbbcbe06e4afdcd6622a4749b85</Anchor>
    <Abstract>Do not announce presence on the network. </Abstract>
    <DeclaredIn>types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ANNOUNCE_REQUIRED</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>zeq</Scope>
    </TokenIdentifier>
    <Path>namespacezeq.html</Path>
    <Anchor>a9d40cc95f062939118c95e4538b45bafa117ccb996f6bbdb4101ad4ad9051aac4</Anchor>
    <Abstract>Chosen protocols are mandatory. </Abstract>
    <DeclaredIn>types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ANNOUNCE_ZEROCONF</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>zeq</Scope>
    </TokenIdentifier>
    <Path>namespacezeq.html</Path>
    <Anchor>a9d40cc95f062939118c95e4538b45bafa88ba7d84d360bc82cd56ff2c467f8118</Anchor>
    <Abstract>Force announcement using zeroconf. </Abstract>
    <DeclaredIn>types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ANNOUNCE_ALL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>zeq</Scope>
    </TokenIdentifier>
    <Path>namespacezeq.html</Path>
    <Anchor>a9d40cc95f062939118c95e4538b45bafa533f9705a86c77b3fef1e05ba7746413</Anchor>
    <Abstract>Force announcement using all protocols. </Abstract>
    <DeclaredIn>types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeq::Event</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>zeq::Event</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_event.html</Path>
    <Abstract>An event is emitted by a Publisher to notify Subscriber of a change. </Abstract>
    <DeclaredIn>event.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Event</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Event</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_event.html</Path>
    <Anchor>a4ad5ae43d859dac9186384593ae8cccc</Anchor>
    <Abstract>Construct a new event of the given type. </Abstract>
    <DeclaredIn>event.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Event</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Event</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_event.html</Path>
    <Anchor>ad6d601dabce3d3846586bb217d35574a</Anchor>
    <Abstract>Move ctor. </Abstract>
    <DeclaredIn>event.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Event</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_event.html</Path>
    <Anchor>adbe87fcfad882977771ad68e4d9e177a</Anchor>
    <DeclaredIn>event.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeq::EventDescriptor</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>zeq::EventDescriptor</Scope>
    </TokenIdentifier>
    <Path>structzeq_1_1_event_descriptor.html</Path>
    <Abstract>This structure holds informations about an Event from a vocabulary. </Abstract>
    <DeclaredIn>eventDescriptor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EventDescriptor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>zeq::EventDescriptor</Scope>
    </TokenIdentifier>
    <Path>structzeq_1_1_event_descriptor.html</Path>
    <Anchor>a44210c20701110d1baa65f7877903c55</Anchor>
    <Abstract>Create an EventDescriptor. </Abstract>
    <DeclaredIn>eventDescriptor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EventDescriptor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>zeq::EventDescriptor</Scope>
    </TokenIdentifier>
    <Path>structzeq_1_1_event_descriptor.html</Path>
    <Anchor>af560d5dcfed9a774340a4833d311c225</Anchor>
    <Abstract>Move ctor. </Abstract>
    <DeclaredIn>eventDescriptor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRestName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>zeq::EventDescriptor</Scope>
    </TokenIdentifier>
    <Path>structzeq_1_1_event_descriptor.html</Path>
    <Anchor>ab4e5d5136f218b8d51300dcf7cf9b3cf</Anchor>
    <DeclaredIn>eventDescriptor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEventType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>zeq::EventDescriptor</Scope>
    </TokenIdentifier>
    <Path>structzeq_1_1_event_descriptor.html</Path>
    <Anchor>aecf776f92a86b40bb0d085fdfdfea12f</Anchor>
    <DeclaredIn>eventDescriptor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSchema</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>zeq::EventDescriptor</Scope>
    </TokenIdentifier>
    <Path>structzeq_1_1_event_descriptor.html</Path>
    <Anchor>ac7f66b43f2fe18cd69d7d321b27a6511</Anchor>
    <DeclaredIn>eventDescriptor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEventDirection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>zeq::EventDescriptor</Scope>
    </TokenIdentifier>
    <Path>structzeq_1_1_event_descriptor.html</Path>
    <Anchor>ab37976890637122c031f9b4d7f060afb</Anchor>
    <DeclaredIn>eventDescriptor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeq::Publisher</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>zeq::Publisher</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_publisher.html</Path>
    <Abstract>Serves and publishes events, consumed by Subscriber. </Abstract>
    <DeclaredIn>publisher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Publisher</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Publisher</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_publisher.html</Path>
    <Anchor>aeb350b0414bbe419d22cce1d000f197c</Anchor>
    <Abstract>Create a default publisher. </Abstract>
    <DeclaredIn>publisher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Publisher</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Publisher</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_publisher.html</Path>
    <Anchor>aa60a19ff5feacebd6a2c00304dac2378</Anchor>
    <Abstract>Create a publisher which announces the specified session. </Abstract>
    <DeclaredIn>publisher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Publisher</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Publisher</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_publisher.html</Path>
    <Anchor>af511ec66c9607fa03faaa2bdcdb09057</Anchor>
    <Abstract>Create a publisher which runs on the specified URI. </Abstract>
    <DeclaredIn>publisher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Publisher</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Publisher</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_publisher.html</Path>
    <Anchor>a0a9f6b7d39f32cf32c5b29484d048afc</Anchor>
    <Abstract>Create a publisher which runs on the specified URI and announces the specified session. </Abstract>
    <DeclaredIn>publisher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Publisher</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Publisher</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_publisher.html</Path>
    <Anchor>a74afb2ad7571292e6d6e3ad1e4f77dd7</Anchor>
    <DeclaredIn>publisher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>publish</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Publisher</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_publisher.html</Path>
    <Anchor>aa2b06125dd60b753e990ca4c21c0bf81</Anchor>
    <Abstract>Publish the given event to any subscriber. </Abstract>
    <DeclaredIn>publisher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>publish</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Publisher</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_publisher.html</Path>
    <Anchor>a710704936944b89100b95c5753c3e9f8</Anchor>
    <Abstract>Publish the given serializable object to any subscriber. </Abstract>
    <DeclaredIn>publisher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getURI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Publisher</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_publisher.html</Path>
    <Anchor>a77d9c8d9f242f35017462d1a6e15d288</Anchor>
    <Abstract>Get the publisher URI. </Abstract>
    <DeclaredIn>publisher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSession</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Publisher</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_publisher.html</Path>
    <Anchor>ac3fb22afe0b33a3b43b7109ddae5c90d</Anchor>
    <DeclaredIn>publisher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeq::Receiver</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>zeq::Receiver</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_receiver.html</Path>
    <Abstract>Base class for entities receiving data. </Abstract>
    <DeclaredIn>receiver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Receiver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Receiver</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_receiver.html</Path>
    <Anchor>a88690cc59f1a24d2e8e3fff6a7990f60</Anchor>
    <Abstract>Create a new standalone receiver. </Abstract>
    <DeclaredIn>receiver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Receiver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Receiver</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_receiver.html</Path>
    <Anchor>acb8b67ecfc50697802d2815bfe22dff0</Anchor>
    <Abstract>Create a shared receiver. </Abstract>
    <DeclaredIn>receiver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Receiver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Receiver</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_receiver.html</Path>
    <Anchor>a52206a6700f786cef1196c94b9148fa7</Anchor>
    <Abstract>Destroy this receiver. </Abstract>
    <DeclaredIn>receiver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>receive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Receiver</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_receiver.html</Path>
    <Anchor>a29985fafbcf5b34277ae7fb33b984025</Anchor>
    <Abstract>Receive at least one event from all shared receivers. </Abstract>
    <DeclaredIn>receiver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addSockets</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Receiver</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_receiver.html</Path>
    <Anchor>aabc3075908575d127f7992d473253df0</Anchor>
    <Abstract>Add this receiver&amp;#39;s sockets to the given list. </Abstract>
    <DeclaredIn>receiver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>process</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Receiver</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_receiver.html</Path>
    <Anchor>aa8590e30058f431bde0c59068a9241f7</Anchor>
    <Abstract>Process data on a signalled socket. </Abstract>
    <DeclaredIn>receiver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Receiver</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_receiver.html</Path>
    <Anchor>a37b16e65ceb1b855aa66f8431359a908</Anchor>
    <Abstract>Update the internal connection list. </Abstract>
    <DeclaredIn>receiver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addConnection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Receiver</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_receiver.html</Path>
    <Anchor>a831f87f0afcc70bd66845107b8370243</Anchor>
    <Abstract>Add the given connection to the list of receiving sockets. </Abstract>
    <DeclaredIn>receiver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeq::Subscriber</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>zeq::Subscriber</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_subscriber.html</Path>
    <Abstract>Subscribes to Publisher to receive events. </Abstract>
    <DeclaredIn>subscriber.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Subscriber</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Subscriber</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_subscriber.html</Path>
    <Anchor>a0fc54bd0da094d8e56ae20e4ff8c2376</Anchor>
    <Abstract>Create a default subscriber. </Abstract>
    <DeclaredIn>subscriber.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Subscriber</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Subscriber</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_subscriber.html</Path>
    <Anchor>af991b6ab112e6fe46295285bb57c0839</Anchor>
    <Abstract>Create a subscriber which subscribes to publisher(s) from the given session. </Abstract>
    <DeclaredIn>subscriber.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Subscriber</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Subscriber</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_subscriber.html</Path>
    <Anchor>a545ecddcdd20feaf0bca454b0fabced8</Anchor>
    <Abstract>Create a subscriber which subscribes to a specific publisher. </Abstract>
    <DeclaredIn>subscriber.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Subscriber</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Subscriber</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_subscriber.html</Path>
    <Anchor>ab1eb800af6119f1b6c264121c39d90b5</Anchor>
    <Abstract>Create a subscriber which subscribes to publisher(s) on the given URI. </Abstract>
    <DeclaredIn>subscriber.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Subscriber</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Subscriber</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_subscriber.html</Path>
    <Anchor>af94804b95c2944ef5d26666ef71bd712</Anchor>
    <Abstract>Create a default shared subscriber. </Abstract>
    <DeclaredIn>subscriber.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Subscriber</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Subscriber</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_subscriber.html</Path>
    <Anchor>af19ab5444ad33221b01cfeeae3871f44</Anchor>
    <Abstract>Create a shared subscriber which subscribes to publisher(s) from the given session. </Abstract>
    <DeclaredIn>subscriber.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Subscriber</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Subscriber</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_subscriber.html</Path>
    <Anchor>a278bd1ac863949adcb2efcad76bc2221</Anchor>
    <Abstract>Create a shared subscriber which subscribes to publisher(s) on the given URI. </Abstract>
    <DeclaredIn>subscriber.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Subscriber</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Subscriber</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_subscriber.html</Path>
    <Anchor>afa79ff9b364bda17a7c6eb6b6bd58d93</Anchor>
    <Abstract>Create a subscriber which subscribes to publisher(s) on the given URI. </Abstract>
    <DeclaredIn>subscriber.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Subscriber</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Subscriber</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_subscriber.html</Path>
    <Anchor>ada930a77eed3f3bd0a3b8c308fc5d5cc</Anchor>
    <DeclaredIn>subscriber.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Subscriber</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Subscriber</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_subscriber.html</Path>
    <Anchor>ac482b768cbbae131a9dd491eb992f008</Anchor>
    <DeclaredIn>subscriber.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Subscriber</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Subscriber</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_subscriber.html</Path>
    <Anchor>a8aca116a1edd501f03387435ef8bb272</Anchor>
    <Abstract>Destroy this subscriber and withdraw any subscriptions. </Abstract>
    <DeclaredIn>subscriber.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Subscriber</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_subscriber.html</Path>
    <Anchor>aba093c3e2d944649a4578ccc1de4d238</Anchor>
    <Abstract>Register a new callback for an event. </Abstract>
    <DeclaredIn>subscriber.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deregisterHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Subscriber</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_subscriber.html</Path>
    <Anchor>ad5b57cbc2fd9a01726a402390ebcec3a</Anchor>
    <Abstract>Deregister a callback for an event. </Abstract>
    <DeclaredIn>subscriber.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Subscriber</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_subscriber.html</Path>
    <Anchor>a9e758d9f0a5a08d66c83af187db4fb86</Anchor>
    <DeclaredIn>subscriber.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>subscribe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Subscriber</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_subscriber.html</Path>
    <Anchor>a885dbce002f64b801109f09e64af45a2</Anchor>
    <Abstract>Subscribe a serializable object to receive updates from any connected publisher. </Abstract>
    <DeclaredIn>subscriber.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unsubscribe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Subscriber</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_subscriber.html</Path>
    <Anchor>a247143e996294b99511ab69866ff1f8c</Anchor>
    <Abstract>Unsubscribe a serializable object to stop applying updates from any connected publisher. </Abstract>
    <DeclaredIn>subscriber.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSession</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Subscriber</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_subscriber.html</Path>
    <Anchor>a49c5df63a2f14e72a533dfce4944b486</Anchor>
    <DeclaredIn>subscriber.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Receiver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Receiver</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_receiver.html</Path>
    <Anchor>a88690cc59f1a24d2e8e3fff6a7990f60</Anchor>
    <Abstract>Create a new standalone receiver. </Abstract>
    <DeclaredIn>receiver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Receiver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Receiver</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_receiver.html</Path>
    <Anchor>acb8b67ecfc50697802d2815bfe22dff0</Anchor>
    <Abstract>Create a shared receiver. </Abstract>
    <DeclaredIn>receiver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Receiver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Receiver</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_receiver.html</Path>
    <Anchor>a52206a6700f786cef1196c94b9148fa7</Anchor>
    <Abstract>Destroy this receiver. </Abstract>
    <DeclaredIn>receiver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>receive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Receiver</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_receiver.html</Path>
    <Anchor>a29985fafbcf5b34277ae7fb33b984025</Anchor>
    <Abstract>Receive at least one event from all shared receivers. </Abstract>
    <DeclaredIn>receiver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeq::URI</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>zeq::URI</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_u_r_i.html</Path>
    <Abstract>Enhances servus::URI to guarantee the existance of a schema and to allow construction of [host][:port...</Abstract>
    <DeclaredIn>uri.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>URI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::URI</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_u_r_i.html</Path>
    <Anchor>a732844b2e298f4ccac84f3a4e42c083c</Anchor>
    <Abstract>Create a default URI in the form &quot;tcp://&quot;. </Abstract>
    <DeclaredIn>uri.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>URI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::URI</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_u_r_i.html</Path>
    <Anchor>a7d1b05e46cccd70e1fb76503b05f9046</Anchor>
    <Abstract>Create URI from string, set schema to &quot;tcp&quot; if empty. </Abstract>
    <DeclaredIn>uri.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>URI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::URI</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_u_r_i.html</Path>
    <Anchor>a3a15ce09c9e9e9c7bc09917ecc31e6a4</Anchor>
    <Abstract>Create URI from string, set schema to &quot;tcp&quot; if empty. </Abstract>
    <DeclaredIn>uri.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>URI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::URI</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_u_r_i.html</Path>
    <Anchor>a653b5f5b562b1a864cc1c8707a08ad8c</Anchor>
    <Abstract>Convert from servus::URI, set schema to &quot;tcp&quot; if empty. </Abstract>
    <DeclaredIn>uri.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toServusURI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::URI</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_u_r_i.html</Path>
    <Anchor>a8a6b20914f64304ac62b10b6771b9410</Anchor>
    <Abstract>Convert this URI to a servus::URI. </Abstract>
    <DeclaredIn>uri.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeq::Version</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>zeq::Version</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_version.html</Path>
    <Abstract>Information about the current zeq version. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMajor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>zeq::Version</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_version.html</Path>
    <Anchor>a41f4df1ff1e733d30bc86afa5eb474d7</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>zeq::Version</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_version.html</Path>
    <Anchor>af81f9d68c1637e17fc54ccac16c74aa8</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPatch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>zeq::Version</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_version.html</Path>
    <Anchor>a825866dab633b61baaf8896498d7df3a</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>zeq::Version</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_version.html</Path>
    <Anchor>ad198112d1dc5d9103683e8c113b785f9</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevision</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>zeq::Version</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_version.html</Path>
    <Anchor>a9dd91755076bd032f13abcba22e72b19</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getABI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>zeq::Version</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_version.html</Path>
    <Anchor>aad68168a59b3bbe74a8c1f4eab20feec</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>zeq::Version</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_version.html</Path>
    <Anchor>abe85a29b7b4665337615c3b9378617f8</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>zeq::Version</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_version.html</Path>
    <Anchor>ae7d6d0df1a602c190250cb704f2f43d5</Anchor>
    <Abstract>Runtime check for ABI compatibility. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeq::connection</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>zeq::connection</Scope>
    </TokenIdentifier>
    <Path>namespacezeq_1_1connection.html</Path>
    <Abstract>Connection broker to introduce remote publishers to a subscriber. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeq::connection::Broker</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>zeq::connection::Broker</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1connection_1_1_broker.html</Path>
    <Abstract>Brokers subscription requests for a zeq::Receiver. </Abstract>
    <DeclaredIn>broker.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Broker</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::connection::Broker</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1connection_1_1_broker.html</Path>
    <Anchor>ae1a2c9797d89e4daed2382e26e7b0adc</Anchor>
    <Abstract>Convenience constructor to create a new subscription broker. </Abstract>
    <DeclaredIn>broker.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Broker</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::connection::Broker</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1connection_1_1_broker.html</Path>
    <Anchor>a3d11b8742e66d267c5b9022b4fbcc225</Anchor>
    <Abstract>Create a new subscription broker. </Abstract>
    <DeclaredIn>broker.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Broker</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::connection::Broker</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1connection_1_1_broker.html</Path>
    <Anchor>a236fa70b41c753236e0e23eec2de89d7</Anchor>
    <Abstract>Destroy this broker. </Abstract>
    <DeclaredIn>broker.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Receiver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Receiver</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_receiver.html</Path>
    <Anchor>a88690cc59f1a24d2e8e3fff6a7990f60</Anchor>
    <Abstract>Create a new standalone receiver. </Abstract>
    <DeclaredIn>receiver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Receiver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Receiver</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_receiver.html</Path>
    <Anchor>acb8b67ecfc50697802d2815bfe22dff0</Anchor>
    <Abstract>Create a shared receiver. </Abstract>
    <DeclaredIn>receiver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Receiver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Receiver</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_receiver.html</Path>
    <Anchor>a52206a6700f786cef1196c94b9148fa7</Anchor>
    <Abstract>Destroy this receiver. </Abstract>
    <DeclaredIn>receiver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>receive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Receiver</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_receiver.html</Path>
    <Anchor>a29985fafbcf5b34277ae7fb33b984025</Anchor>
    <Abstract>Receive at least one event from all shared receivers. </Abstract>
    <DeclaredIn>receiver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addSockets</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Receiver</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_receiver.html</Path>
    <Anchor>aabc3075908575d127f7992d473253df0</Anchor>
    <Abstract>Add this receiver&amp;#39;s sockets to the given list. </Abstract>
    <DeclaredIn>receiver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>process</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Receiver</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_receiver.html</Path>
    <Anchor>aa8590e30058f431bde0c59068a9241f7</Anchor>
    <Abstract>Process data on a signalled socket. </Abstract>
    <DeclaredIn>receiver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Receiver</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_receiver.html</Path>
    <Anchor>a37b16e65ceb1b855aa66f8431359a908</Anchor>
    <Abstract>Update the internal connection list. </Abstract>
    <DeclaredIn>receiver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PORT_FIXED</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>zeq::connection::Broker</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1connection_1_1_broker.html</Path>
    <Anchor>ac63c0d3298bbeedbe294507ffa540263a8f378a27058447abe7a122db7e440299</Anchor>
    <Abstract>Use only the fixed port for named brokers. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PORT_FIXED_OR_RANDOM</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>zeq::connection::Broker</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1connection_1_1_broker.html</Path>
    <Anchor>ac63c0d3298bbeedbe294507ffa540263adef3bc2eb49ac4bd354f67be82a028f6</Anchor>
    <Abstract>Fall back to a random port on failure. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeq::connection::Service</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>zeq::connection::Service</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1connection_1_1_service.html</Path>
    <Abstract>Subscribes a Publisher to a remote receiver using a connection::Broker. </Abstract>
    <DeclaredIn>service.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>subscribe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>zeq::connection::Service</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1connection_1_1_service.html</Path>
    <Anchor>ada4998dfa110cedfb6c4b74c25ce64f9</Anchor>
    <Abstract>Request subscription of the given publisher to a remote broker. </Abstract>
    <DeclaredIn>service.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>subscribe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>zeq::connection::Service</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1connection_1_1_service.html</Path>
    <Anchor>a85e440aac566bd7c4af65d28ffdbddc5</Anchor>
    <Abstract>Request subscription of the given publisher to a named remote broker. </Abstract>
    <DeclaredIn>service.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeq::hbp::data::CellSetBinaryOp</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>zeq::hbp::data::CellSetBinaryOp</Scope>
    </TokenIdentifier>
    <Path>structzeq_1_1hbp_1_1data_1_1_cell_set_binary_op.html</Path>
    <Abstract>Stores two unsigned int vectors and an operation flag. </Abstract>
    <DeclaredIn>vocabulary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeq::hbp::data::Frame</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>zeq::hbp::data::Frame</Scope>
    </TokenIdentifier>
    <Path>structzeq_1_1hbp_1_1data_1_1_frame.html</Path>
    <Abstract>Rendering frame information. </Abstract>
    <DeclaredIn>vocabulary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeq::hbp::data::ImageJPEG</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>zeq::hbp::data::ImageJPEG</Scope>
    </TokenIdentifier>
    <Path>structzeq_1_1hbp_1_1data_1_1_image_j_p_e_g.html</Path>
    <Abstract>Holds informations about JPEG images. </Abstract>
    <DeclaredIn>vocabulary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeq::http</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>zeq::http</Scope>
    </TokenIdentifier>
    <Path>namespacezeq_1_1http.html</Path>
    <Abstract>HTTP protocol support. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeq::http::Server</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>zeq::http::Server</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1http_1_1_server.html</Path>
    <Abstract>Serves HTTP GET and PUT requests for servus::Serializable objects. </Abstract>
    <DeclaredIn>server.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::http::Server</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1http_1_1_server.html</Path>
    <Anchor>a12375938cc7ec5b0037f9c9ba7845d8f</Anchor>
    <Abstract>Subscribe and register the given object. </Abstract>
    <DeclaredIn>server.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::http::Server</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1http_1_1_server.html</Path>
    <Anchor>aebf0b405fca90f6b1e15b9d51a2d78f5</Anchor>
    <Abstract>Unsubscribe and unregister the given object. </Abstract>
    <DeclaredIn>server.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>subscribe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::http::Server</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1http_1_1_server.html</Path>
    <Anchor>a45c338f09f3b62ebe3bc4647cd8226ab</Anchor>
    <Abstract>Subscribe a serializable object to receive updates from HTTP PUT requests. </Abstract>
    <DeclaredIn>server.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unsubscribe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::http::Server</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1http_1_1_server.html</Path>
    <Anchor>ae84980bbea8930b804ae5d176ae04dee</Anchor>
    <Abstract>Unsubscribe the given object to stop applying updates. </Abstract>
    <DeclaredIn>server.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>register_</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::http::Server</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1http_1_1_server.html</Path>
    <Anchor>a4a103758b9d5919585aa4b3ddee0d94d</Anchor>
    <Abstract>Subscribe a serializable object to serve HTTP GET requests. </Abstract>
    <DeclaredIn>server.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unregister</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::http::Server</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1http_1_1_server.html</Path>
    <Anchor>a07de3b98787345982fa0ce1927947a41</Anchor>
    <Abstract>Unsubscribe the given object for GET requests. </Abstract>
    <DeclaredIn>server.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Receiver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Receiver</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_receiver.html</Path>
    <Anchor>a88690cc59f1a24d2e8e3fff6a7990f60</Anchor>
    <Abstract>Create a new standalone receiver. </Abstract>
    <DeclaredIn>receiver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Receiver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Receiver</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_receiver.html</Path>
    <Anchor>acb8b67ecfc50697802d2815bfe22dff0</Anchor>
    <Abstract>Create a shared receiver. </Abstract>
    <DeclaredIn>receiver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Receiver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Receiver</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_receiver.html</Path>
    <Anchor>a52206a6700f786cef1196c94b9148fa7</Anchor>
    <Abstract>Destroy this receiver. </Abstract>
    <DeclaredIn>receiver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>receive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Receiver</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_receiver.html</Path>
    <Anchor>a29985fafbcf5b34277ae7fb33b984025</Anchor>
    <Abstract>Receive at least one event from all shared receivers. </Abstract>
    <DeclaredIn>receiver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Server</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::http::Server</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1http_1_1_server.html</Path>
    <Anchor>a67210df2aae3b09e00d288f3095f27eb</Anchor>
    <Abstract>Construct a new HTTP server. </Abstract>
    <DeclaredIn>server.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getURI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::http::Server</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1http_1_1_server.html</Path>
    <Anchor>a6380225606ed1f0f0fe0e7cb03b915af</Anchor>
    <Abstract>Get the publisher URI. </Abstract>
    <DeclaredIn>server.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>zeq::http::Server</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1http_1_1_server.html</Path>
    <Anchor>a7a2760a5737483bd4af8d7065f68e0d7</Anchor>
    <Abstract>Create a new Server when requested. </Abstract>
    <DeclaredIn>server.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Receiver</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_receiver.html</Path>
    <Anchor>a37b16e65ceb1b855aa66f8431359a908</Anchor>
    <Abstract>Update the internal connection list. </Abstract>
    <DeclaredIn>receiver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeq::vocabulary</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>zeq::vocabulary</Scope>
    </TokenIdentifier>
    <Path>namespacezeq_1_1vocabulary.html</Path>
    <Abstract>An application specific vocabulary of supported events including their serialization. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serializeVocabulary</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>zeq::vocabulary</Scope>
    </TokenIdentifier>
    <Path>namespacezeq_1_1vocabulary.html</Path>
    <Anchor>aaaba03f06faca60894e23100795d61df</Anchor>
    <Abstract>Serialize the given vocabulary into an Event of type EVENT_VOCABULARY. </Abstract>
    <DeclaredIn>vocabulary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserializeVocabulary</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>zeq::vocabulary</Scope>
    </TokenIdentifier>
    <Path>namespacezeq_1_1vocabulary.html</Path>
    <Anchor>a9cbe60014a33a439fec7ae93f36b9dda</Anchor>
    <Abstract>Deserialize the given EVENT_VOCABULARY event into a vector of EventDescriptors. </Abstract>
    <DeclaredIn>vocabulary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serializeRequest</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>zeq::vocabulary</Scope>
    </TokenIdentifier>
    <Path>namespacezeq_1_1vocabulary.html</Path>
    <Anchor>abfecbbc1af49dfc33f8c3ed9af49f927</Anchor>
    <Abstract>Serialize the given event type into an Event of type EVENT_REQUEST. </Abstract>
    <DeclaredIn>vocabulary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserializeRequest</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>zeq::vocabulary</Scope>
    </TokenIdentifier>
    <Path>namespacezeq_1_1vocabulary.html</Path>
    <Anchor>afd538e101e07561b3a7b749a8ab81513</Anchor>
    <Abstract>Deserialize the given request event into a uint128_t. </Abstract>
    <DeclaredIn>vocabulary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>zeq::vocabulary</Scope>
    </TokenIdentifier>
    <Path>namespacezeq_1_1vocabulary.html</Path>
    <Anchor>a68a3ede01c739bd84ca6f99268962e05</Anchor>
    <Abstract>Establish a type to schema mapping for (de)serialization from/to JSON. </Abstract>
    <DeclaredIn>vocabulary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serializeJSON</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>zeq::vocabulary</Scope>
    </TokenIdentifier>
    <Path>namespacezeq_1_1vocabulary.html</Path>
    <Anchor>a331aea81006cbd1c4803652d64e33850</Anchor>
    <Abstract>Serialize an event from JSON to a zeq::Event. </Abstract>
    <DeclaredIn>vocabulary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserializeJSON</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>zeq::vocabulary</Scope>
    </TokenIdentifier>
    <Path>namespacezeq_1_1vocabulary.html</Path>
    <Anchor>a350e3dc6f70dd1cb400d9e72eda2c971</Anchor>
    <Abstract>Deserialize a zeq::Event to a JSON string. </Abstract>
    <DeclaredIn>vocabulary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeqhbp::Version</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>zeqhbp::Version</Scope>
    </TokenIdentifier>
    <Path>classzeqhbp_1_1_version.html</Path>
    <Abstract>Information about the current zeqHBP version. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMajor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>zeqhbp::Version</Scope>
    </TokenIdentifier>
    <Path>classzeqhbp_1_1_version.html</Path>
    <Anchor>a1bd94b3e56099225eedc0d2b996e5630</Anchor>
    <DeclaredIn>hbp/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>zeqhbp::Version</Scope>
    </TokenIdentifier>
    <Path>classzeqhbp_1_1_version.html</Path>
    <Anchor>ac14fad3b485598109a326f4edfcace40</Anchor>
    <DeclaredIn>hbp/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPatch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>zeqhbp::Version</Scope>
    </TokenIdentifier>
    <Path>classzeqhbp_1_1_version.html</Path>
    <Anchor>ab5640c1a4715ad46c49dcbaf1818116c</Anchor>
    <DeclaredIn>hbp/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>zeqhbp::Version</Scope>
    </TokenIdentifier>
    <Path>classzeqhbp_1_1_version.html</Path>
    <Anchor>a5c1f433980642c0cb912d427c4897a56</Anchor>
    <DeclaredIn>hbp/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevision</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>zeqhbp::Version</Scope>
    </TokenIdentifier>
    <Path>classzeqhbp_1_1_version.html</Path>
    <Anchor>a850eff4787a412ac4dd76416b9c7261d</Anchor>
    <DeclaredIn>hbp/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getABI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>zeqhbp::Version</Scope>
    </TokenIdentifier>
    <Path>classzeqhbp_1_1_version.html</Path>
    <Anchor>a130abc75e610dd2be783eaee036f1df0</Anchor>
    <DeclaredIn>hbp/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>zeqhbp::Version</Scope>
    </TokenIdentifier>
    <Path>classzeqhbp_1_1_version.html</Path>
    <Anchor>a10ec971398894a5e3e71b1f18381cb47</Anchor>
    <DeclaredIn>hbp/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>zeqhbp::Version</Scope>
    </TokenIdentifier>
    <Path>classzeqhbp_1_1_version.html</Path>
    <Anchor>aa87d40b242fe7ec3b6a8b965ad9b8519</Anchor>
    <Abstract>Runtime check for ABI compatibility. </Abstract>
    <DeclaredIn>hbp/version.h</DeclaredIn>
  </Token>
</Tokens>

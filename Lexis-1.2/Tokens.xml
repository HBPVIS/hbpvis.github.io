<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
  <Token>
    <TokenIdentifier>
      <Name>LEXIS_VERSION_MAJOR</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a78d2d265a67ac3e94edd9fe1e48b2402</Anchor>
    <Abstract>The current major version. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LEXIS_VERSION_MINOR</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>aa912f1acceb5e6d6ac0b63ea94aeab8a</Anchor>
    <Abstract>The current minor version. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LEXIS_VERSION_PATCH</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>acca6f7d9ac6ec026f96eedba54ead70f</Anchor>
    <Abstract>The current patch level. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LEXIS_VERSION_REVISION</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>aad4f9c46048668a14298a9819833c2c3</Anchor>
    <Abstract>The current SCM revision. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LEXIS_VERSION_ABI</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a557df0ae152e11430a0071f0e56c2dad</Anchor>
    <Abstract>The current binary interface. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LEXIS_VERSION_GT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a9dd7ef590bad8992fe6d13405fc8d949</Anchor>
    <Abstract>True if the current version is newer than the given one. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LEXIS_VERSION_GE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a7844ca9007ef7c67765522bb6bb8301b</Anchor>
    <Abstract>True if the current version is equal or newer to the given. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LEXIS_VERSION_LT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a68a2a64ba7b4f9d98692e484e6ed9359</Anchor>
    <Abstract>True if the current version is older than the given one. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LEXIS_VERSION_LE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>ac0b2b0b9866cf62c65a5739359fe0934</Anchor>
    <Abstract>True if the current version is older or equal to the given. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Changelog</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>Changelog.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>colorMaps</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>colorMaps.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Features</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>Features.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apps</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>apps.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lexis-progressmonitor</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>lexis-progressmonitor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lexis-sendevent</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>lexis-sendevent.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lexis::Request</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>lexis::Request</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1_request.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::Request</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1_request.html</Path>
    <Anchor>aa3d64e72f6be2b7157d3a272574a305b</Anchor>
    <Abstract>Set the Event value. </Abstract>
    <DeclaredIn>request.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lexis::Version</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>lexis::Version</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1_version.html</Path>
    <Abstract>Information about the current Lexis version. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMajor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>lexis::Version</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1_version.html</Path>
    <Anchor>a0ab08f92265f8abbc57784eed4827553</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>lexis::Version</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1_version.html</Path>
    <Anchor>ab489e0e0a93e30e530476151b207b53f</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPatch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>lexis::Version</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1_version.html</Path>
    <Anchor>a597940898d8f704998440c120b7aa94e</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>lexis::Version</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1_version.html</Path>
    <Anchor>afb64f396652e4f53c20707dea14ffe39</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevision</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>lexis::Version</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1_version.html</Path>
    <Anchor>a2ce2a401a0e7e32f1b3c087899152a12</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getABI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>lexis::Version</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1_version.html</Path>
    <Anchor>a11576245df6b58fc7fb79d399ca536a3</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>lexis::Version</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1_version.html</Path>
    <Anchor>add487e88325075061062bab5929630eb</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>lexis::Version</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1_version.html</Path>
    <Anchor>aafabc9c24c33b9c0fb61a3c1a4d05017</Anchor>
    <Abstract>Runtime check for ABI compatibility. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSchema</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>lexis::Version</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1_version.html</Path>
    <Anchor>a694288be65c9b96428d3754e34fa3cb1</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toJSON</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>lexis::Version</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1_version.html</Path>
    <Anchor>ab418fb299799691cecad492e75a88e9f</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lexis::data::CellSetBinaryOp</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>lexis::data::CellSetBinaryOp</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1data_1_1_cell_set_binary_op.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFirst</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::data::CellSetBinaryOp</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1data_1_1_cell_set_binary_op.html</Path>
    <Anchor>afdb900856094024b9e57d4cc63b8a67b</Anchor>
    <Abstract>Get a reference to the First dynamic member. </Abstract>
    <DeclaredIn>cellSetBinaryOp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFirst</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::data::CellSetBinaryOp</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1data_1_1_cell_set_binary_op.html</Path>
    <Anchor>a5e944c55779cc859960f07e5708ab1d3</Anchor>
    <Abstract>Set the value of the First dynamic object from a uint32_t* and size. </Abstract>
    <DeclaredIn>cellSetBinaryOp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFirst</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::data::CellSetBinaryOp</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1data_1_1_cell_set_binary_op.html</Path>
    <Anchor>a398f58d7a137be630eafaa71556f5368</Anchor>
    <Abstract>Set the value of the First dynamic object from a std::vector&lt; uint32_t &gt;. </Abstract>
    <DeclaredIn>cellSetBinaryOp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSecond</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::data::CellSetBinaryOp</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1data_1_1_cell_set_binary_op.html</Path>
    <Anchor>a5f85842da12eaeb2c32c7c0c035af0d3</Anchor>
    <Abstract>Get a reference to the Second dynamic member. </Abstract>
    <DeclaredIn>cellSetBinaryOp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSecond</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::data::CellSetBinaryOp</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1data_1_1_cell_set_binary_op.html</Path>
    <Anchor>a4b828a7aeeda3278cae26a11d10ae773</Anchor>
    <Abstract>Set the value of the Second dynamic object from a uint32_t* and size. </Abstract>
    <DeclaredIn>cellSetBinaryOp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSecond</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::data::CellSetBinaryOp</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1data_1_1_cell_set_binary_op.html</Path>
    <Anchor>a350e8fb6d6be62f0c1ac8cd0358c7a5a</Anchor>
    <Abstract>Set the value of the Second dynamic object from a std::vector&lt; uint32_t &gt;. </Abstract>
    <DeclaredIn>cellSetBinaryOp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOperation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::data::CellSetBinaryOp</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1data_1_1_cell_set_binary_op.html</Path>
    <Anchor>a61ae3f38439173ea471f79a61fd60915</Anchor>
    <Abstract>Set the Operation value. </Abstract>
    <DeclaredIn>cellSetBinaryOp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lexis::data::FrameRange</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>lexis::data::FrameRange</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1data_1_1_frame_range.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStart</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::data::FrameRange</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1data_1_1_frame_range.html</Path>
    <Anchor>ae3a5b57ccdaf66552550dba5b56a5eb3</Anchor>
    <Abstract>Set the Start value. </Abstract>
    <DeclaredIn>frameRange.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEnd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::data::FrameRange</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1data_1_1_frame_range.html</Path>
    <Anchor>a4f90b0ff0c93c3c2e3ebcac299a00770</Anchor>
    <Abstract>Set the End value. </Abstract>
    <DeclaredIn>frameRange.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lexis::data::Progress</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>lexis::data::Progress</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1data_1_1_progress.html</Path>
    <Abstract>Drop-in progress meter for boost::progress_display. </Abstract>
    <DeclaredIn>Progress.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getOperation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::data::detail::Progress</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1data_1_1detail_1_1_progress.html</Path>
    <Anchor>ac8e7eeefb58e4ff093fe280379f38aee</Anchor>
    <Abstract>Get a reference to the Operation dynamic member. </Abstract>
    <DeclaredIn>progress.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOperation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::data::detail::Progress</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1data_1_1detail_1_1_progress.html</Path>
    <Anchor>aafb98546a02713cde02f6757aa0e2ffa</Anchor>
    <Abstract>Set the value of the Operation dynamic object from a char* and size. </Abstract>
    <DeclaredIn>progress.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOperation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::data::detail::Progress</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1data_1_1detail_1_1_progress.html</Path>
    <Anchor>ae3a4e55c4c13317dca6f1c30fd6dfcfe</Anchor>
    <Abstract>Set the value of the Operation dynamic object from a std::string. </Abstract>
    <DeclaredIn>progress.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAmount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::data::detail::Progress</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1data_1_1detail_1_1_progress.html</Path>
    <Anchor>a58a50b8b29a04301348a9fe70a9f2d62</Anchor>
    <Abstract>Set the Amount value. </Abstract>
    <DeclaredIn>progress.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lexis::data::SelectedIDs</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>lexis::data::SelectedIDs</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1data_1_1_selected_i_ds.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIds</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::data::SelectedIDs</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1data_1_1_selected_i_ds.html</Path>
    <Anchor>a78d6f0aea607d7d32a40dd74f28015e0</Anchor>
    <Abstract>Get a reference to the Ids dynamic member. </Abstract>
    <DeclaredIn>selections.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIds</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::data::SelectedIDs</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1data_1_1_selected_i_ds.html</Path>
    <Anchor>ac1eb687e0e401373b01d74478af9afa0</Anchor>
    <Abstract>Set the value of the Ids dynamic object from a uint32_t* and size. </Abstract>
    <DeclaredIn>selections.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIds</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::data::SelectedIDs</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1data_1_1_selected_i_ds.html</Path>
    <Anchor>a050700a7454f09aa64db66643ca46833</Anchor>
    <Abstract>Set the value of the Ids dynamic object from a std::vector&lt; uint32_t &gt;. </Abstract>
    <DeclaredIn>selections.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lexis::data::ToggleIDRequest</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>lexis::data::ToggleIDRequest</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1data_1_1_toggle_i_d_request.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIds</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::data::ToggleIDRequest</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1data_1_1_toggle_i_d_request.html</Path>
    <Anchor>a977c6670c486bfde5d834f87ecf9450d</Anchor>
    <Abstract>Get a reference to the Ids dynamic member. </Abstract>
    <DeclaredIn>selections.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIds</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::data::ToggleIDRequest</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1data_1_1_toggle_i_d_request.html</Path>
    <Anchor>a1b771a826560b120261ab5314b6e1a3c</Anchor>
    <Abstract>Set the value of the Ids dynamic object from a uint32_t* and size. </Abstract>
    <DeclaredIn>selections.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIds</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::data::ToggleIDRequest</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1data_1_1_toggle_i_d_request.html</Path>
    <Anchor>a8a72a59dcbb54e5565be444f665030c0</Anchor>
    <Abstract>Set the value of the Ids dynamic object from a std::vector&lt; uint32_t &gt;. </Abstract>
    <DeclaredIn>selections.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lexis::data::detail::Progress</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>lexis::data::detail::Progress</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1data_1_1detail_1_1_progress.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getOperation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::data::detail::Progress</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1data_1_1detail_1_1_progress.html</Path>
    <Anchor>ac8e7eeefb58e4ff093fe280379f38aee</Anchor>
    <Abstract>Get a reference to the Operation dynamic member. </Abstract>
    <DeclaredIn>progress.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOperation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::data::detail::Progress</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1data_1_1detail_1_1_progress.html</Path>
    <Anchor>aafb98546a02713cde02f6757aa0e2ffa</Anchor>
    <Abstract>Set the value of the Operation dynamic object from a char* and size. </Abstract>
    <DeclaredIn>progress.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOperation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::data::detail::Progress</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1data_1_1detail_1_1_progress.html</Path>
    <Anchor>ae3a4e55c4c13317dca6f1c30fd6dfcfe</Anchor>
    <Abstract>Set the value of the Operation dynamic object from a std::string. </Abstract>
    <DeclaredIn>progress.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAmount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::data::detail::Progress</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1data_1_1detail_1_1_progress.html</Path>
    <Anchor>a58a50b8b29a04301348a9fe70a9f2d62</Anchor>
    <Abstract>Set the Amount value. </Abstract>
    <DeclaredIn>progress.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lexis::render::ClipPlanes</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>lexis::render::ClipPlanes</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1_clip_planes.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ClipPlanes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::render::ClipPlanes</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1_clip_planes.html</Path>
    <Anchor>a712a8416c4abcbaeecf9ac6b9465ca28</Anchor>
    <Abstract>Adds 6 othogonal planes in normalized space (+x,-x,+y,-y,+z,-z). </Abstract>
    <DeclaredIn>ClipPlanes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEmpty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::render::ClipPlanes</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1_clip_planes.html</Path>
    <Anchor>a651e204137b08a086d7b52130565daa5</Anchor>
    <DeclaredIn>ClipPlanes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::render::ClipPlanes</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1_clip_planes.html</Path>
    <Anchor>a24c6fc4904c359997ed39ebae1ef8eae</Anchor>
    <Abstract>Clears all planes, results in isEmpty() == true. </Abstract>
    <DeclaredIn>ClipPlanes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::render::ClipPlanes</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1_clip_planes.html</Path>
    <Anchor>a09153b27ed9656e3c7bb47c32be9cc78</Anchor>
    <Abstract>Reset to planes setup by constructor. </Abstract>
    <DeclaredIn>ClipPlanes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isOutside</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::render::ClipPlanes</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1_clip_planes.html</Path>
    <Anchor>a502259ab460e86e03c6604ec348e92b0</Anchor>
    <DeclaredIn>ClipPlanes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPlanes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::render::detail::ClipPlanes</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1detail_1_1_clip_planes.html</Path>
    <Anchor>aaef21dd5393b1dde62cc0dc989e99caf</Anchor>
    <Abstract>Get a reference to the Planes dynamic member. </Abstract>
    <DeclaredIn>clipPlanes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPlanes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::render::detail::ClipPlanes</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1detail_1_1_clip_planes.html</Path>
    <Anchor>a9c7eae9a1b8438b68dba77af0ff58b4f</Anchor>
    <Abstract>Set the value of Planes dynamic array from a std::vector&lt; Plane &gt;. </Abstract>
    <DeclaredIn>clipPlanes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lexis::render::Color</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>lexis::render::Color</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1_color.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::render::Color</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1_color.html</Path>
    <Anchor>a74aeb8d1bcb3c8ec6a75afbd37cad37f</Anchor>
    <Abstract>Set the Red value. </Abstract>
    <DeclaredIn>materialLUT.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setGreen</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::render::Color</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1_color.html</Path>
    <Anchor>a7ab6e80f2e9bdec326c6044478791357</Anchor>
    <Abstract>Set the Green value. </Abstract>
    <DeclaredIn>materialLUT.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBlue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::render::Color</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1_color.html</Path>
    <Anchor>ace6af820cf19a631fa8aa14e95b7bb87</Anchor>
    <Abstract>Set the Blue value. </Abstract>
    <DeclaredIn>materialLUT.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lexis::render::Exit</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>lexis::render::Exit</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1_exit.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lexis::render::Frame</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>lexis::render::Frame</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1_frame.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStart</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::render::Frame</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1_frame.html</Path>
    <Anchor>a6eb741679780785a001d719253000ef9</Anchor>
    <Abstract>Set the Start value. </Abstract>
    <DeclaredIn>frame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCurrent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::render::Frame</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1_frame.html</Path>
    <Anchor>a0f41362db89ae24647906728d12b52b4</Anchor>
    <Abstract>Set the Current value. </Abstract>
    <DeclaredIn>frame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEnd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::render::Frame</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1_frame.html</Path>
    <Anchor>a16b3ad628ae4d337f377341403716f4c</Anchor>
    <Abstract>Set the End value. </Abstract>
    <DeclaredIn>frame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDelta</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::render::Frame</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1_frame.html</Path>
    <Anchor>aa6c98c768f38d8e129f9be0f7a7b5618</Anchor>
    <Abstract>Set the Delta value. </Abstract>
    <DeclaredIn>frame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lexis::render::Histogram</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>lexis::render::Histogram</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1_histogram.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Histogram</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::render::Histogram</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1_histogram.html</Path>
    <Anchor>a77b4f9b83088c8ff8ada95239845c677</Anchor>
    <Abstract>The minimum value is set to -inf and maximum value is set to -inf. </Abstract>
    <DeclaredIn>Histogram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::render::Histogram</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1_histogram.html</Path>
    <Anchor>a4784ce40f4851b40e2f7ab3bcec48521</Anchor>
    <Abstract>Computes the addition of two histograms and modifies the object. </Abstract>
    <DeclaredIn>Histogram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::render::Histogram</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1_histogram.html</Path>
    <Anchor>abd8d57aaca3d7e0118d513e02540a01f</Anchor>
    <DeclaredIn>Histogram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::render::Histogram</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1_histogram.html</Path>
    <Anchor>aef162b2617c7147efa81db753de018c8</Anchor>
    <DeclaredIn>Histogram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::render::Histogram</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1_histogram.html</Path>
    <Anchor>ad9662c086d7fcc498097b88e940f91e1</Anchor>
    <DeclaredIn>Histogram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::render::Histogram</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1_histogram.html</Path>
    <Anchor>a7cdd5aa9295bd87d9b4c0c1e5dec3680</Anchor>
    <DeclaredIn>Histogram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEmpty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::render::Histogram</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1_histogram.html</Path>
    <Anchor>aacd34dea040243c44b7b4664213d574a</Anchor>
    <DeclaredIn>Histogram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::render::Histogram</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1_histogram.html</Path>
    <Anchor>acda3b0518b046e5cf26729a83477cecc</Anchor>
    <DeclaredIn>Histogram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::render::Histogram</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1_histogram.html</Path>
    <Anchor>a57b1118d36d4a02cac9190b7c6e18b0e</Anchor>
    <DeclaredIn>Histogram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::render::Histogram</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1_histogram.html</Path>
    <Anchor>af6e22e75eee4ad1c94ba1e9af00d586e</Anchor>
    <Abstract>Computes the ratio of the value at a given index. </Abstract>
    <DeclaredIn>Histogram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::render::Histogram</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1_histogram.html</Path>
    <Anchor>a1281a03b5eec83757943cfa9a6c02675</Anchor>
    <Abstract>Sets the number of bins to newSize and clears the histogram. </Abstract>
    <DeclaredIn>Histogram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBins</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::render::detail::Histogram</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1detail_1_1_histogram.html</Path>
    <Anchor>a426fb7dc9465e0cbcc10b4e688f9cf16</Anchor>
    <Abstract>Get a reference to the Bins dynamic member. </Abstract>
    <DeclaredIn>histogram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBins</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::render::detail::Histogram</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1detail_1_1_histogram.html</Path>
    <Anchor>a1f3a10caca2d71dac784a70c98b6820a</Anchor>
    <Abstract>Set the value of the Bins dynamic object from a uint64_t* and size. </Abstract>
    <DeclaredIn>histogram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBins</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::render::detail::Histogram</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1detail_1_1_histogram.html</Path>
    <Anchor>a4747cf1bf0ecb07d10fc4fa89fb3ae94</Anchor>
    <Abstract>Set the value of the Bins dynamic object from a std::vector&lt; uint64_t &gt;. </Abstract>
    <DeclaredIn>histogram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::render::detail::Histogram</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1detail_1_1_histogram.html</Path>
    <Anchor>a60bcecbe976f2fdbf5d47b843ac0df25</Anchor>
    <Abstract>Set the Min value. </Abstract>
    <DeclaredIn>histogram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMax</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::render::detail::Histogram</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1detail_1_1_histogram.html</Path>
    <Anchor>ac626fadbb6a0fc91b194da0ad6103e89</Anchor>
    <Abstract>Set the Max value. </Abstract>
    <DeclaredIn>histogram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lexis::render::ImageJPEG</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>lexis::render::ImageJPEG</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1_image_j_p_e_g.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::render::ImageJPEG</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1_image_j_p_e_g.html</Path>
    <Anchor>a9c25058a387f0935e5dddf8377467605</Anchor>
    <Abstract>Get a reference to the Data dynamic member. </Abstract>
    <DeclaredIn>imageJPEG.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::render::ImageJPEG</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1_image_j_p_e_g.html</Path>
    <Anchor>a8edffdb3c2a14821474a34ff799d6b57</Anchor>
    <Abstract>Set the value of the Data dynamic object from a uint8_t* and size. </Abstract>
    <DeclaredIn>imageJPEG.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::render::ImageJPEG</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1_image_j_p_e_g.html</Path>
    <Anchor>ae7d31cc7922a172059a635f2748b848e</Anchor>
    <Abstract>Set the value of the Data dynamic object from a std::vector&lt; uint8_t &gt;. </Abstract>
    <DeclaredIn>imageJPEG.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lexis::render::LookOut</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>lexis::render::LookOut</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1_look_out.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMatrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::render::LookOut</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1_look_out.html</Path>
    <Anchor>a50da24acf12b2b6e7a402511e6672dbd</Anchor>
    <Abstract>Get a pointer to the Matrix fixed size array. </Abstract>
    <DeclaredIn>lookOut.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMatrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::render::LookOut</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1_look_out.html</Path>
    <Anchor>afd4486c6baa990cbd0e265f9ef3ee7d2</Anchor>
    <Abstract>Set the value of the Matrix fixed size array from a double*. </Abstract>
    <DeclaredIn>lookOut.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMatrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::render::LookOut</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1_look_out.html</Path>
    <Anchor>a6bb784e91485d9d4dc99327132f3a871</Anchor>
    <Abstract>Set the value of the Matrix fixed size array object from a std::vector&lt; double &gt;. ...</Abstract>
    <DeclaredIn>lookOut.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lexis::render::LookupTable1D</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>lexis::render::LookupTable1D</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1_lookup_table1_d.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::render::LookupTable1D</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1_lookup_table1_d.html</Path>
    <Anchor>aa045047524cbbfa149cda12c221f20e6</Anchor>
    <Abstract>Get a pointer to the Lut fixed size array. </Abstract>
    <DeclaredIn>lookupTable1D.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::render::LookupTable1D</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1_lookup_table1_d.html</Path>
    <Anchor>acd5117af296da131895cbea3e8dbe4fd</Anchor>
    <Abstract>Set the value of the Lut fixed size array from a uint8_t*. </Abstract>
    <DeclaredIn>lookupTable1D.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLut</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::render::LookupTable1D</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1_lookup_table1_d.html</Path>
    <Anchor>a3d07f22bb5c955755db44b88357be496</Anchor>
    <Abstract>Set the value of the Lut fixed size array object from a std::vector&lt; uint8_t &gt;. </Abstract>
    <DeclaredIn>lookupTable1D.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lexis::render::MaterialLUT</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>lexis::render::MaterialLUT</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1_material_l_u_t.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDiffuse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::render::MaterialLUT</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1_material_l_u_t.html</Path>
    <Anchor>a958a54fc548ab93b1c1183024143fe4d</Anchor>
    <Abstract>Get a reference to the Diffuse dynamic member. </Abstract>
    <DeclaredIn>materialLUT.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDiffuse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::render::MaterialLUT</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1_material_l_u_t.html</Path>
    <Anchor>ab9e5526b73aba5726d7597a57a08b8ef</Anchor>
    <Abstract>Set the value of Diffuse dynamic array from a std::vector&lt; Color &gt;. </Abstract>
    <DeclaredIn>materialLUT.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEmission</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::render::MaterialLUT</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1_material_l_u_t.html</Path>
    <Anchor>a57af926eec0057f447ce18abe4bd1042</Anchor>
    <Abstract>Get a reference to the Emission dynamic member. </Abstract>
    <DeclaredIn>materialLUT.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEmission</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::render::MaterialLUT</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1_material_l_u_t.html</Path>
    <Anchor>a94188d5c16ae4a812aa0333fa6bfbfe7</Anchor>
    <Abstract>Set the value of Emission dynamic array from a std::vector&lt; Color &gt;. </Abstract>
    <DeclaredIn>materialLUT.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAlpha</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::render::MaterialLUT</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1_material_l_u_t.html</Path>
    <Anchor>a6f8b216df90482a49ea514bbf37971a9</Anchor>
    <Abstract>Get a reference to the Alpha dynamic member. </Abstract>
    <DeclaredIn>materialLUT.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAlpha</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::render::MaterialLUT</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1_material_l_u_t.html</Path>
    <Anchor>ac6c8e96286496eb36da6750bc06bc2c2</Anchor>
    <Abstract>Set the value of the Alpha dynamic object from a float* and size. </Abstract>
    <DeclaredIn>materialLUT.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAlpha</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::render::MaterialLUT</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1_material_l_u_t.html</Path>
    <Anchor>a7f3d88919ab4465f4b65bf1c9c350cc2</Anchor>
    <Abstract>Set the value of the Alpha dynamic object from a std::vector&lt; float &gt;. </Abstract>
    <DeclaredIn>materialLUT.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getContribution</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::render::MaterialLUT</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1_material_l_u_t.html</Path>
    <Anchor>a59249caf64906741a3791df73bf44627</Anchor>
    <Abstract>Get a reference to the Contribution dynamic member. </Abstract>
    <DeclaredIn>materialLUT.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setContribution</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::render::MaterialLUT</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1_material_l_u_t.html</Path>
    <Anchor>a256a81675395fb8fbdbdc1bc5d295256</Anchor>
    <Abstract>Set the value of the Contribution dynamic object from a float* and size. </Abstract>
    <DeclaredIn>materialLUT.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setContribution</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::render::MaterialLUT</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1_material_l_u_t.html</Path>
    <Anchor>ad4819ce7c02009ad7df75a5735a5f0bf</Anchor>
    <Abstract>Set the value of the Contribution dynamic object from a std::vector&lt; float &gt;. </Abstract>
    <DeclaredIn>materialLUT.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::render::MaterialLUT</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1_material_l_u_t.html</Path>
    <Anchor>afd002b912d1ffa89470cb8431c6b0121</Anchor>
    <Abstract>Get a pointer to the Range fixed size array. </Abstract>
    <DeclaredIn>materialLUT.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::render::MaterialLUT</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1_material_l_u_t.html</Path>
    <Anchor>ab73c09d1e2f704a14e945be2240edc32</Anchor>
    <Abstract>Set the value of the Range fixed size array from a double*. </Abstract>
    <DeclaredIn>materialLUT.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::render::MaterialLUT</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1_material_l_u_t.html</Path>
    <Anchor>a45dc18c7bbb45eb4d7f08e887783e1ab</Anchor>
    <Abstract>Set the value of the Range fixed size array object from a std::vector&lt; double &gt;. </Abstract>
    <DeclaredIn>materialLUT.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lexis::render::Stream</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>lexis::render::Stream</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1_stream.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHost</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::render::Stream</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1_stream.html</Path>
    <Anchor>a6d52090b6dcfe49983dcc39c9a41df06</Anchor>
    <Abstract>Get a reference to the Host dynamic member. </Abstract>
    <DeclaredIn>stream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setHost</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::render::Stream</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1_stream.html</Path>
    <Anchor>ab9aef74e41ed3669568191512cb3f3b2</Anchor>
    <Abstract>Set the value of the Host dynamic object from a char* and size. </Abstract>
    <DeclaredIn>stream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setHost</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::render::Stream</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1_stream.html</Path>
    <Anchor>a85b1f631806087e054047e02d8ac3971</Anchor>
    <Abstract>Set the value of the Host dynamic object from a std::string. </Abstract>
    <DeclaredIn>stream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getId</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::render::Stream</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1_stream.html</Path>
    <Anchor>ae8a8124f1acf0849143bcb618a510094</Anchor>
    <Abstract>Get a reference to the Id dynamic member. </Abstract>
    <DeclaredIn>stream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setId</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::render::Stream</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1_stream.html</Path>
    <Anchor>a3858ceb095a92ee5e5ec09de5d565b48</Anchor>
    <Abstract>Set the value of the Id dynamic object from a char* and size. </Abstract>
    <DeclaredIn>stream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setId</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::render::Stream</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1_stream.html</Path>
    <Anchor>ab2f91a2c48ba78f85b0b34dda2dd3307</Anchor>
    <Abstract>Set the value of the Id dynamic object from a std::string. </Abstract>
    <DeclaredIn>stream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEnabled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::render::Stream</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1_stream.html</Path>
    <Anchor>a351503e668c961fbf43952e62aeb7d45</Anchor>
    <Abstract>Set the Enabled value. </Abstract>
    <DeclaredIn>stream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::render::Stream</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1_stream.html</Path>
    <Anchor>aa97c3c65d88d9547230cc2797a78ff15</Anchor>
    <Abstract>Set the Port value. </Abstract>
    <DeclaredIn>stream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCompression</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::render::Stream</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1_stream.html</Path>
    <Anchor>a1a09d57682fc7cfcb180d51aeafe9dd8</Anchor>
    <Abstract>Set the Compression value. </Abstract>
    <DeclaredIn>stream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setQuality</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::render::Stream</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1_stream.html</Path>
    <Anchor>add9922c6206b53a5ad9e1d7db5e049fb</Anchor>
    <Abstract>Set the Quality value. </Abstract>
    <DeclaredIn>stream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lexis::render::Viewport</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>lexis::render::Viewport</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1_viewport.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::render::Viewport</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1_viewport.html</Path>
    <Anchor>a80cbaec6373df7ef8d67cf9644ed8b20</Anchor>
    <Abstract>Get a pointer to the Size fixed size array. </Abstract>
    <DeclaredIn>viewport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::render::Viewport</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1_viewport.html</Path>
    <Anchor>a53ff093ac1e26d36fb3100cf83f5838c</Anchor>
    <Abstract>Set the value of the Size fixed size array from a uint32_t*. </Abstract>
    <DeclaredIn>viewport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::render::Viewport</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1_viewport.html</Path>
    <Anchor>af9d5caf615b2a536eaaf3a0883a7f210</Anchor>
    <Abstract>Set the value of the Size fixed size array object from a std::vector&lt; uint32_t &gt;. ...</Abstract>
    <DeclaredIn>viewport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lexis::render::detail::ClipPlanes</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>lexis::render::detail::ClipPlanes</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1detail_1_1_clip_planes.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPlanes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::render::detail::ClipPlanes</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1detail_1_1_clip_planes.html</Path>
    <Anchor>aaef21dd5393b1dde62cc0dc989e99caf</Anchor>
    <Abstract>Get a reference to the Planes dynamic member. </Abstract>
    <DeclaredIn>clipPlanes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPlanes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::render::detail::ClipPlanes</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1detail_1_1_clip_planes.html</Path>
    <Anchor>a9c7eae9a1b8438b68dba77af0ff58b4f</Anchor>
    <Abstract>Set the value of Planes dynamic array from a std::vector&lt; Plane &gt;. </Abstract>
    <DeclaredIn>clipPlanes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lexis::render::detail::Histogram</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>lexis::render::detail::Histogram</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1detail_1_1_histogram.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBins</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::render::detail::Histogram</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1detail_1_1_histogram.html</Path>
    <Anchor>a426fb7dc9465e0cbcc10b4e688f9cf16</Anchor>
    <Abstract>Get a reference to the Bins dynamic member. </Abstract>
    <DeclaredIn>histogram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBins</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::render::detail::Histogram</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1detail_1_1_histogram.html</Path>
    <Anchor>a1f3a10caca2d71dac784a70c98b6820a</Anchor>
    <Abstract>Set the value of the Bins dynamic object from a uint64_t* and size. </Abstract>
    <DeclaredIn>histogram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBins</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::render::detail::Histogram</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1detail_1_1_histogram.html</Path>
    <Anchor>a4747cf1bf0ecb07d10fc4fa89fb3ae94</Anchor>
    <Abstract>Set the value of the Bins dynamic object from a std::vector&lt; uint64_t &gt;. </Abstract>
    <DeclaredIn>histogram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::render::detail::Histogram</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1detail_1_1_histogram.html</Path>
    <Anchor>a60bcecbe976f2fdbf5d47b843ac0df25</Anchor>
    <Abstract>Set the Min value. </Abstract>
    <DeclaredIn>histogram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMax</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::render::detail::Histogram</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1detail_1_1_histogram.html</Path>
    <Anchor>ac626fadbb6a0fc91b194da0ad6103e89</Anchor>
    <Abstract>Set the Max value. </Abstract>
    <DeclaredIn>histogram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lexis::render::detail::Plane</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>lexis::render::detail::Plane</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1detail_1_1_plane.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNormal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::render::detail::Plane</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1detail_1_1_plane.html</Path>
    <Anchor>a11db6751bc2e44e868d8a7f23de8e74a</Anchor>
    <Abstract>Get a pointer to the Normal fixed size array. </Abstract>
    <DeclaredIn>clipPlanes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNormal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::render::detail::Plane</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1detail_1_1_plane.html</Path>
    <Anchor>ab19c6098077fe2216c02511cfbf56ff4</Anchor>
    <Abstract>Set the value of the Normal fixed size array from a float*. </Abstract>
    <DeclaredIn>clipPlanes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNormal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::render::detail::Plane</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1detail_1_1_plane.html</Path>
    <Anchor>ae54086d098e1f4ba61f37b33203be033</Anchor>
    <Abstract>Set the value of the Normal fixed size array object from a std::vector&lt; float &gt;. </Abstract>
    <DeclaredIn>clipPlanes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setD</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lexis::render::detail::Plane</Scope>
    </TokenIdentifier>
    <Path>classlexis_1_1render_1_1detail_1_1_plane.html</Path>
    <Anchor>a0553bef9cb71cebca8cfc2e4d852c036</Anchor>
    <Abstract>Set the D value. </Abstract>
    <DeclaredIn>clipPlanes.h</DeclaredIn>
  </Token>
</Tokens>

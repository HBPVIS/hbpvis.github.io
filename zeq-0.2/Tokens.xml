<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
  <Token>
    <TokenIdentifier>
      <Name>ZEQ_VERSION_MAJOR</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a12fae0402740d5c84366ab5f0bd6554c</Anchor>
    <Abstract>The current major version. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ZEQ_VERSION_MINOR</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>acd3491df19714dd0d1861f50a10b32f2</Anchor>
    <Abstract>The current minor version. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ZEQ_VERSION_PATCH</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a5269836f205f1455c34566228b45b09f</Anchor>
    <Abstract>The current patch level. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ZEQ_VERSION_REVISION</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a6ff2bef8774b18f7720a7379e47f7d00</Anchor>
    <Abstract>The current SCM revision. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ZEQ_VERSION_ABI</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a6a6b0fcb9b32d23eca113e585726bf5e</Anchor>
    <Abstract>The current binary interface. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ZEQ_VERSION_GT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>aa96a4b6a93bd636ed8960420b4bd0363</Anchor>
    <Abstract>True if the current version is newer than the given one. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ZEQ_VERSION_GE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>ac144433933c03622cf40d6400bccaa97</Anchor>
    <Abstract>True if the current version is equal or newer to the given. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ZEQ_VERSION_LT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a7419588525c44968c085bb9f7b01bedd</Anchor>
    <Abstract>True if the current version is older than the given one. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ZEQ_VERSION_LE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a9c71293a06474f1635d9e432b9bce572</Anchor>
    <Abstract>True if the current version is older or equal to the given. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Events</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>group___events.html</Path>
    <Abstract>Supported events by the vocabulary. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeq</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>zeq</Scope>
    </TokenIdentifier>
    <Path>namespacezeq.html</Path>
    <Abstract>Publish-subscribe classes for typed events. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ANNOUNCE_NONE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>zeq</Scope>
    </TokenIdentifier>
    <Path>namespacezeq.html</Path>
    <Anchor>a9d40cc95f062939118c95e4538b45bafa4268ffbbcbe06e4afdcd6622a4749b85</Anchor>
    <Abstract>Do not announce presence on the network. </Abstract>
    <DeclaredIn>types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ANNOUNCE_REQUIRED</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>zeq</Scope>
    </TokenIdentifier>
    <Path>namespacezeq.html</Path>
    <Anchor>a9d40cc95f062939118c95e4538b45bafa117ccb996f6bbdb4101ad4ad9051aac4</Anchor>
    <Abstract>Chosen protocols are mandatory. </Abstract>
    <DeclaredIn>types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ANNOUNCE_ZEROCONF</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>zeq</Scope>
    </TokenIdentifier>
    <Path>namespacezeq.html</Path>
    <Anchor>a9d40cc95f062939118c95e4538b45bafa88ba7d84d360bc82cd56ff2c467f8118</Anchor>
    <Abstract>Force announcement using zeroconf. </Abstract>
    <DeclaredIn>types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ANNOUNCE_ALL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>zeq</Scope>
    </TokenIdentifier>
    <Path>namespacezeq.html</Path>
    <Anchor>a9d40cc95f062939118c95e4538b45bafa533f9705a86c77b3fef1e05ba7746413</Anchor>
    <Abstract>Force announcement using all protocols. </Abstract>
    <DeclaredIn>types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeq::Event</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>zeq::Event</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_event.html</Path>
    <Abstract>An event is emitted by a Publisher to notify Subscriber of a change. </Abstract>
    <DeclaredIn>event.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Event</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Event</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_event.html</Path>
    <Anchor>a11f83e150ec9373dc21702fb07f89c89</Anchor>
    <Abstract>Construct a new event of the given type. </Abstract>
    <DeclaredIn>event.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Event</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Event</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_event.html</Path>
    <Anchor>af7eb39ed9bb28c343c859f79442b38f3</Anchor>
    <Abstract>Move ctor. </Abstract>
    <DeclaredIn>event.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Event</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_event.html</Path>
    <Anchor>a8f91ade95acf612559fe89fa4e2a0273</Anchor>
    <DeclaredIn>event.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeq::EventDescriptor</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>zeq::EventDescriptor</Scope>
    </TokenIdentifier>
    <Path>structzeq_1_1_event_descriptor.html</Path>
    <Abstract>This structure holds informations about an Event from a vocabulary. </Abstract>
    <DeclaredIn>eventDescriptor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EventDescriptor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>zeq::EventDescriptor</Scope>
    </TokenIdentifier>
    <Path>structzeq_1_1_event_descriptor.html</Path>
    <Anchor>ab122ca95e2641c64fe094b04be239bca</Anchor>
    <Abstract>Create an EventDescriptor. </Abstract>
    <DeclaredIn>eventDescriptor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EventDescriptor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>zeq::EventDescriptor</Scope>
    </TokenIdentifier>
    <Path>structzeq_1_1_event_descriptor.html</Path>
    <Anchor>adb2b622d8e2825bbf643e15f8a34627e</Anchor>
    <Abstract>Move ctor. </Abstract>
    <DeclaredIn>eventDescriptor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRestName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>zeq::EventDescriptor</Scope>
    </TokenIdentifier>
    <Path>structzeq_1_1_event_descriptor.html</Path>
    <Anchor>afc4d7e2bef549d805cf2c05759db84c3</Anchor>
    <DeclaredIn>eventDescriptor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEventType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>zeq::EventDescriptor</Scope>
    </TokenIdentifier>
    <Path>structzeq_1_1_event_descriptor.html</Path>
    <Anchor>a449d3753a29e0482d80fe2b92e300757</Anchor>
    <DeclaredIn>eventDescriptor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSchema</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>zeq::EventDescriptor</Scope>
    </TokenIdentifier>
    <Path>structzeq_1_1_event_descriptor.html</Path>
    <Anchor>a562d681a4d25e23e28138aa6a0a99d37</Anchor>
    <DeclaredIn>eventDescriptor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEventDirection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>zeq::EventDescriptor</Scope>
    </TokenIdentifier>
    <Path>structzeq_1_1_event_descriptor.html</Path>
    <Anchor>a652fcafa4625ee791e7d2713e050c099</Anchor>
    <DeclaredIn>eventDescriptor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeq::Publisher</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>zeq::Publisher</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_publisher.html</Path>
    <Abstract>Serves and publishes events, consumed by Subscriber. </Abstract>
    <DeclaredIn>publisher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Publisher</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Publisher</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_publisher.html</Path>
    <Anchor>aea6bced47d52cb8b0c32c93555dfe017</Anchor>
    <Abstract>Create a publisher on the given URI. </Abstract>
    <DeclaredIn>publisher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>publish</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Publisher</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_publisher.html</Path>
    <Anchor>a5f91e89db1e928c4d5bac4735e306cd4</Anchor>
    <Abstract>Publish the given event to any subscriber. </Abstract>
    <DeclaredIn>publisher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getURI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Publisher</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_publisher.html</Path>
    <Anchor>afd9c9061b68d9860a3e0524299bd9297</Anchor>
    <Abstract>Get the publisher URI. </Abstract>
    <DeclaredIn>publisher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeq::Receiver</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>zeq::Receiver</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_receiver.html</Path>
    <Abstract>Base class for entities receiving data. </Abstract>
    <DeclaredIn>receiver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Receiver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Receiver</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_receiver.html</Path>
    <Anchor>ab0f6c8102579a854a69d88e96dc1570a</Anchor>
    <Abstract>Create a new standalone receiver. </Abstract>
    <DeclaredIn>receiver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Receiver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Receiver</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_receiver.html</Path>
    <Anchor>afb676577162b4a78c241c0c73766033a</Anchor>
    <Abstract>Create a shared receiver. </Abstract>
    <DeclaredIn>receiver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Receiver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Receiver</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_receiver.html</Path>
    <Anchor>a1ed49c2cc9937ce2b86d9fd7774414ec</Anchor>
    <Abstract>Destroy this receiver. </Abstract>
    <DeclaredIn>receiver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>receive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Receiver</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_receiver.html</Path>
    <Anchor>a72e616d24249924476c4a4e45202976c</Anchor>
    <Abstract>Receive at least one event from all shared receivers. </Abstract>
    <DeclaredIn>receiver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addSockets</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Receiver</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_receiver.html</Path>
    <Anchor>aabc3075908575d127f7992d473253df0</Anchor>
    <Abstract>Add this receiver&amp;#39;s sockets to the given list. </Abstract>
    <DeclaredIn>receiver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>process</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Receiver</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_receiver.html</Path>
    <Anchor>aa8590e30058f431bde0c59068a9241f7</Anchor>
    <Abstract>Process data on a signalled socket. </Abstract>
    <DeclaredIn>receiver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Receiver</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_receiver.html</Path>
    <Anchor>a37b16e65ceb1b855aa66f8431359a908</Anchor>
    <Abstract>Update the internal connection list. </Abstract>
    <DeclaredIn>receiver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addConnection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Receiver</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_receiver.html</Path>
    <Anchor>a831f87f0afcc70bd66845107b8370243</Anchor>
    <Abstract>Add the given connection to the list of receiving sockets. </Abstract>
    <DeclaredIn>receiver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeq::Subscriber</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>zeq::Subscriber</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_subscriber.html</Path>
    <Abstract>Subscribes to Publisher to receive events. </Abstract>
    <DeclaredIn>subscriber.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Subscriber</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Subscriber</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_subscriber.html</Path>
    <Anchor>a7c5ea7491dcb3fdd766c2e1da583e7ef</Anchor>
    <Abstract>Create and subscribe to one or more publishers. </Abstract>
    <DeclaredIn>subscriber.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Subscriber</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Subscriber</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_subscriber.html</Path>
    <Anchor>a228aa00add090323d9f9043b63013f5d</Anchor>
    <Abstract>Destroy this subscriber and withdraw any subscriptions. </Abstract>
    <DeclaredIn>subscriber.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Subscriber</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_subscriber.html</Path>
    <Anchor>aec321369ed4d395a89fed2fe5334080c</Anchor>
    <Abstract>Register a new callback for an event. </Abstract>
    <DeclaredIn>subscriber.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deregisterHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Subscriber</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_subscriber.html</Path>
    <Anchor>a3c8691d610e0f84b362573e925714704</Anchor>
    <Abstract>Deregister a callback for an event. </Abstract>
    <DeclaredIn>subscriber.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Receiver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Receiver</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_receiver.html</Path>
    <Anchor>ab0f6c8102579a854a69d88e96dc1570a</Anchor>
    <Abstract>Create a new standalone receiver. </Abstract>
    <DeclaredIn>receiver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Receiver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Receiver</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_receiver.html</Path>
    <Anchor>afb676577162b4a78c241c0c73766033a</Anchor>
    <Abstract>Create a shared receiver. </Abstract>
    <DeclaredIn>receiver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Receiver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Receiver</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_receiver.html</Path>
    <Anchor>a1ed49c2cc9937ce2b86d9fd7774414ec</Anchor>
    <Abstract>Destroy this receiver. </Abstract>
    <DeclaredIn>receiver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>receive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Receiver</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_receiver.html</Path>
    <Anchor>a72e616d24249924476c4a4e45202976c</Anchor>
    <Abstract>Receive at least one event from all shared receivers. </Abstract>
    <DeclaredIn>receiver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeq::Version</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>zeq::Version</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_version.html</Path>
    <Abstract>Information about the current bbp version. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMajor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>zeq::Version</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_version.html</Path>
    <Anchor>a41f4df1ff1e733d30bc86afa5eb474d7</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>zeq::Version</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_version.html</Path>
    <Anchor>af81f9d68c1637e17fc54ccac16c74aa8</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPatch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>zeq::Version</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_version.html</Path>
    <Anchor>a825866dab633b61baaf8896498d7df3a</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>zeq::Version</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_version.html</Path>
    <Anchor>ad198112d1dc5d9103683e8c113b785f9</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevision</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>zeq::Version</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_version.html</Path>
    <Anchor>a9dd91755076bd032f13abcba22e72b19</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getABI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>zeq::Version</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_version.html</Path>
    <Anchor>aad68168a59b3bbe74a8c1f4eab20feec</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>zeq::Version</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_version.html</Path>
    <Anchor>abe85a29b7b4665337615c3b9378617f8</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>zeq::Version</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_version.html</Path>
    <Anchor>ae7d6d0df1a602c190250cb704f2f43d5</Anchor>
    <Abstract>Runtime check for ABI compatibility. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeq::connection</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>zeq::connection</Scope>
    </TokenIdentifier>
    <Path>namespacezeq_1_1connection.html</Path>
    <Abstract>Connection broker to introduce remote publishers to a subscriber. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeq::connection::Broker</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>zeq::connection::Broker</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1connection_1_1_broker.html</Path>
    <Abstract>Brokers subscription requests for a zeq::Receiver. </Abstract>
    <DeclaredIn>broker.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Broker</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::connection::Broker</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1connection_1_1_broker.html</Path>
    <Anchor>abe8d70d9bde9923de3c2e8e419b348bd</Anchor>
    <Abstract>Convenience constructor to create a new subscription broker. </Abstract>
    <DeclaredIn>broker.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Broker</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::connection::Broker</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1connection_1_1_broker.html</Path>
    <Anchor>aa4c693643df4e231c3c4d00b677d27d4</Anchor>
    <Abstract>Create a new subscription broker. </Abstract>
    <DeclaredIn>broker.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Broker</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::connection::Broker</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1connection_1_1_broker.html</Path>
    <Anchor>acaa311bf7bfbaafbdaa731b5e481239b</Anchor>
    <Abstract>Destroy this broker. </Abstract>
    <DeclaredIn>broker.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Receiver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Receiver</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_receiver.html</Path>
    <Anchor>ab0f6c8102579a854a69d88e96dc1570a</Anchor>
    <Abstract>Create a new standalone receiver. </Abstract>
    <DeclaredIn>receiver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Receiver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Receiver</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_receiver.html</Path>
    <Anchor>afb676577162b4a78c241c0c73766033a</Anchor>
    <Abstract>Create a shared receiver. </Abstract>
    <DeclaredIn>receiver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Receiver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Receiver</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_receiver.html</Path>
    <Anchor>a1ed49c2cc9937ce2b86d9fd7774414ec</Anchor>
    <Abstract>Destroy this receiver. </Abstract>
    <DeclaredIn>receiver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>receive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Receiver</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_receiver.html</Path>
    <Anchor>a72e616d24249924476c4a4e45202976c</Anchor>
    <Abstract>Receive at least one event from all shared receivers. </Abstract>
    <DeclaredIn>receiver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addSockets</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Receiver</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_receiver.html</Path>
    <Anchor>aabc3075908575d127f7992d473253df0</Anchor>
    <Abstract>Add this receiver&amp;#39;s sockets to the given list. </Abstract>
    <DeclaredIn>receiver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>process</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Receiver</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_receiver.html</Path>
    <Anchor>aa8590e30058f431bde0c59068a9241f7</Anchor>
    <Abstract>Process data on a signalled socket. </Abstract>
    <DeclaredIn>receiver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>zeq::Receiver</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1_receiver.html</Path>
    <Anchor>a37b16e65ceb1b855aa66f8431359a908</Anchor>
    <Abstract>Update the internal connection list. </Abstract>
    <DeclaredIn>receiver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PORT_FIXED</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>zeq::connection::Broker</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1connection_1_1_broker.html</Path>
    <Anchor>ac63c0d3298bbeedbe294507ffa540263a8f378a27058447abe7a122db7e440299</Anchor>
    <Abstract>Use only the fixed port for named brokers. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PORT_FIXED_OR_RANDOM</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>zeq::connection::Broker</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1connection_1_1_broker.html</Path>
    <Anchor>ac63c0d3298bbeedbe294507ffa540263adef3bc2eb49ac4bd354f67be82a028f6</Anchor>
    <Abstract>Fall back to a random port on failure. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeq::connection::Service</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>zeq::connection::Service</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1connection_1_1_service.html</Path>
    <Abstract>Subscribes a Publisher to a remote receiver using a connection::Broker. </Abstract>
    <DeclaredIn>service.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>subscribe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>zeq::connection::Service</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1connection_1_1_service.html</Path>
    <Anchor>a8180cb2ded5ea61fc00f61ff25c51578</Anchor>
    <Abstract>Request subscription of the given publisher to a remote broker. </Abstract>
    <DeclaredIn>service.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>subscribe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>zeq::connection::Service</Scope>
    </TokenIdentifier>
    <Path>classzeq_1_1connection_1_1_service.html</Path>
    <Anchor>ae4d633900f810ee0601b4a4dd7dc0a4a</Anchor>
    <Abstract>Request subscription of the given publisher to a named remote broker. </Abstract>
    <DeclaredIn>service.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeq::hbp::data::ImageJPEG</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>zeq::hbp::data::ImageJPEG</Scope>
    </TokenIdentifier>
    <Path>structzeq_1_1hbp_1_1data_1_1_image_j_p_e_g.html</Path>
    <Abstract>This structure holds informations about JPEG images. </Abstract>
    <DeclaredIn>vocabulary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zeq::vocabulary</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>zeq::vocabulary</Scope>
    </TokenIdentifier>
    <Path>namespacezeq_1_1vocabulary.html</Path>
    <Abstract>An application specific vocabulary of supported events including their serialization. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serializeVocabulary</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>zeq::vocabulary</Scope>
    </TokenIdentifier>
    <Path>namespacezeq_1_1vocabulary.html</Path>
    <Anchor>ac43d3ee9acda842ea6233576b4dab3d8</Anchor>
    <Abstract>Serialize the given vocabulary into an Event of type EVENT_VOCABULARY. </Abstract>
    <DeclaredIn>vocabulary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserializeVocabulary</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>zeq::vocabulary</Scope>
    </TokenIdentifier>
    <Path>namespacezeq_1_1vocabulary.html</Path>
    <Anchor>aae83cbe4e971f39e29ae0514d0869bec</Anchor>
    <Abstract>Deserialize the given EVENT_VOCABULARY event into a vector of EventDescriptors. </Abstract>
    <DeclaredIn>vocabulary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serializeRequest</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>zeq::vocabulary</Scope>
    </TokenIdentifier>
    <Path>namespacezeq_1_1vocabulary.html</Path>
    <Anchor>ab5920e63129230de26ba3fafe353d712</Anchor>
    <Abstract>Serialize the given event type into an Event of type EVENT_REQUEST. </Abstract>
    <DeclaredIn>vocabulary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserializeRequest</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>zeq::vocabulary</Scope>
    </TokenIdentifier>
    <Path>namespacezeq_1_1vocabulary.html</Path>
    <Anchor>a19bfab03b0d6f505f229cae9af91d8d8</Anchor>
    <Abstract>Deserialize the given request event into a uint128_t. </Abstract>
    <DeclaredIn>vocabulary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serializeJSON</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>zeq::vocabulary</Scope>
    </TokenIdentifier>
    <Path>namespacezeq_1_1vocabulary.html</Path>
    <Anchor>a81dc1b1aea1b2607f844cd81900bfa51</Anchor>
    <Abstract>Serialize an event from JSON to a zeq::Event. </Abstract>
    <DeclaredIn>vocabulary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserializeJSON</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>zeq::vocabulary</Scope>
    </TokenIdentifier>
    <Path>namespacezeq_1_1vocabulary.html</Path>
    <Anchor>a9dca8066931455f7faaeb6e1c84438d5</Anchor>
    <Abstract>Deserialize a zeq::Event to a JSON string. </Abstract>
    <DeclaredIn>vocabulary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>zeq::vocabulary</Scope>
    </TokenIdentifier>
    <Path>namespacezeq_1_1vocabulary.html</Path>
    <Anchor>a6f74b3da70d7d54065a76607a585329f</Anchor>
    <Abstract>Establish a type to schema mapping for (de)serialization from/to JSON. </Abstract>
    <DeclaredIn>vocabulary.h</DeclaredIn>
  </Token>
</Tokens>
